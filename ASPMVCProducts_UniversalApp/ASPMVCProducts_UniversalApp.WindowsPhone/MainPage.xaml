<Page
    x:Class="ASPMVCProducts_UniversalApp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ASPMVCProducts_UniversalApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Name="mThis">
    <Page.Resources>
        <local:BoolToVisibilityConverter x:Key="mFalseToCollapsedConverter"/>
        <local:ConverterPipeLine x:Key="mVisibleWhenNullConverter">
            <local:ConverterPipeLine.ValueConverters>
                <local:IsNullConverter/>
                <local:BoolToVisibilityConverter/>
            </local:ConverterPipeLine.ValueConverters>
        </local:ConverterPipeLine>
        <local:ConverterPipeLine x:Key="mCollapsedWhenNullConverter">
            <local:ConverterPipeLine.ValueConverters>
                <local:IsNullConverter/>
                <local:InvertBoolConverter />
                <local:BoolToVisibilityConverter/>
            </local:ConverterPipeLine.ValueConverters>
        </local:ConverterPipeLine>
        <local:ConverterPipeLine x:Key="mIsNotNullConverter">
            <local:ConverterPipeLine.ValueConverters>
                <local:IsNullConverter/>
                <local:InvertBoolConverter/>
            </local:ConverterPipeLine.ValueConverters>
        </local:ConverterPipeLine>
        <local:InvertBoolConverter x:Key="mInvertBoolConverter" />
        <FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
        <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
        <Thickness x:Key="ListViewItemMargin">0</Thickness>
        <SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
        <x:Double x:Key="CheckBoxBorderThemeThickness">2.5</x:Double>
        <x:Double x:Key="ListViewItemContentOffsetX">-40.5</x:Double>
        <Thickness x:Key="ListViewItemMultiselectCheckBoxMargin">0,9.5,0,0</Thickness>
        <Thickness x:Key="GridViewItemMultiselectBorderThickness">2.5</Thickness>
        <x:Double x:Key="ListViewItemDisabledThemeOpacity">0.4</x:Double>
        <x:Double x:Key="ListViewItemContentTranslateX">40.5</x:Double>
        <x:Double x:Key="ListViewItemReorderHintThemeOffset">32</x:Double>
        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="False"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ContentScaleTransform"/>
                            </Border.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Pressed" To="Normal">
                                            <!--<Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                            </Storyboard>-->
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <!--<Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>
                                        </Storyboard>-->
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--<PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>-->
                                            <ColorAnimation Duration="0" To="#2DFFFFFF" Storyboard.TargetProperty="(ListviewItem.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />
                                            <ColorAnimation Duration="0" To="#55FFFFFF" Storyboard.TargetProperty="(ListviewItem.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckboxPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                            <ColorAnimation Duration="0" To="#2DFFFFFF" Storyboard.TargetProperty="(ListviewItem.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />
                                            <ColorAnimation Duration="0" To="#55FFFFFF" Storyboard.TargetProperty="(ListviewItem.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                            <ColorAnimation Duration="0" To="#2DFFFFFF" Storyboard.TargetProperty="(ListviewItem.Background).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />
                                            <ColorAnimation Duration="0" To="#55FFFFFF" Storyboard.TargetProperty="(ListviewItem.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentBorder" FillBehavior="HoldEnd" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
                                        <VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoMultiSelect"/>
                                    <VisualState x:Name="ListMultiSelect">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
                                            <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="GridMultiSelect">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderModeStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="ReorderEnabled">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Reorderable">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                                <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderDisabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
                                    <Border x:Name="CheckboxOuterContainer">
                                        <Border.Clip>
                                            <RectangleGeometry Rect="0,0,25.5,25.5"/>
                                        </Border.Clip>
                                        <Grid x:Name="CheckboxContainer">
                                            <Grid.RenderTransform>
                                                <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
                                            </Grid.RenderTransform>
                                            <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
                                            <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <Border x:Name="ContentContainer">
                                    <Border x:Name="TiltContainer">
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <Border.RenderTransform>
                                                <TranslateTransform x:Name="ContentBorderTranslateTransform"/>
                                            </Border.RenderTransform>
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                                <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                                <Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
                                    <Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
                                        <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
                                        <Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Page.IsEnabled>
        <Binding ElementName="m_This" Path="APIClient.IsBusy" Converter="{StaticResource mInvertBoolConverter}"/>
    </Page.IsEnabled>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" >
        <Grid Name="mGridLogin"  VerticalAlignment="Center" Width="300" Margin="3" Visibility="{Binding ElementName=mThis, Path=APIClient.LoggedInUser, Converter={StaticResource mVisibleWhenNullConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center" Text="User name"/>
            <TextBox Name="mUserNameTxtBox" Grid.Row="0" Grid.Column="1" Margin="3" VerticalAlignment="Center" Text="gcastro" />
            <TextBlock Grid.Row="1" Grid.Column="0" Margin="3" HorizontalAlignment="Left" VerticalAlignment="Center" Text="Password"/>
            <PasswordBox Name="mPwdBox" Grid.Row="1" Grid.Column="1" Margin="3" VerticalAlignment="Center" Password="gcastro"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Margin="3" HorizontalAlignment="Left" Text="Server URL" VerticalAlignment="Center"/>
            <TextBox Name="mServerURLTxtBox" Grid.Row="2" Grid.Column="1" Margin="3" VerticalAlignment="Center" Text="{Binding ElementName=mThis, Path=APIClient.ServerURL}" />
            <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Name="mLoginBtn"  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Tapped="mLoginBtn_Tapped">Login</Button>
                <Button Name="mRegisterBtn"  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Tapped="mRegisterBtn_Tapped">Register</Button>
            </StackPanel>
            <!--<local:LoadingCircle x:Name="mCircleIsBusy" Grid.Row="5" Grid.ColumnSpan="2" Margin="3"  Width="55" Height="55" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>-->
        </Grid>
        <Grid Name="mGridLists" Visibility="{Binding ElementName=mThis, Path=APIClient.LoggedInUser, Converter={StaticResource mCollapsedWhenNullConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Name="mStackPanelIsBusy" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                    <TextBlock Margin="3,3,5,3" VerticalAlignment="Center" Text="Busy..."/>
                    <!--<local:LoadingCircle  Width="25" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" >
                    <TextBlock Margin="3" VerticalAlignment="Center">
                        <Run Text="Logged in as "/>
                        <Run Text="{Binding ElementName=mThis, Path=APIClient.LoggedInUser.Name}"/>
                    </TextBlock>
                    <Button Name="mLogoutBtn"  Margin="3" VerticalAlignment="Center" Tapped="mLogoutBtn_Tapped" Content="Logout"/>
                </StackPanel>
                <Line Grid.ColumnSpan="3" Grid.Row="1" Margin="3" X1="0" Y1="0" X2="{Binding ElementName=mGridProductLists, Path=ActualWidth}" Y2="0" Stroke="White" StrokeThickness="2" />
                <Grid Name="mGridProductLists" Grid.Row="2" Visibility="{Binding ElementName=mListViewProductLists, Path=SelectedItem, Converter={StaticResource mVisibleWhenNullConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" FontSize="37" HorizontalAlignment="Center">Lists</TextBlock>
                    <ListView Name="mListViewProductLists" Grid.Row="1" Grid.Column="0" Margin="3" SelectionMode="Single" CanDragItems="False" CanReorderItems="False"
                              IsDoubleTapEnabled="False"
                              IsHoldingEnabled="False" 
                              IsItemClickEnabled="False"
                              IsRightTapEnabled="False"
                              ItemsSource="{Binding ElementName=mThis, Path=APIClient.ProductLists}" 
                              ItemContainerStyle="{StaticResource ListViewItemStyle}" 
                               >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="3" FontSize="25" FontStyle="Italic" Text="{Binding Path=Name}" VerticalAlignment="Center"/>
                                    <Canvas Name="CanvasDeleteList" Grid.Column="1" Background="Transparent" Margin="3,3,25,3" VerticalAlignment="Center" Width="25" Height="25"
                                                   Tapped="ProductListDelete_Tapped" PointerEntered="CanvasDeleteList_PointerEntered" PointerPressed="CanvasDelete_PointerPressed" PointerReleased="CanvasDelete_PointerReleased"
                                                    PointerCaptureLost="CanvasDelete_PointerCaptureLost" PointerExited="CanvasDelete_PointerExited">
                                        <Line X1="0" Y1="0" X2="25" Y2="25" StrokeThickness="5" Stroke="Red"/>
                                        <Line X1="0" Y1="25" X2="25" Y2="0" StrokeThickness="5" Stroke="Red"/>
                                    </Canvas>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <Line Grid.Row="2" Margin="3" X1="0" Y1="0" X2="{Binding ElementName=mGridProductLists, Path=ActualWidth}" Y2="0" Stroke="White" StrokeThickness="1" />
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="mProductListNameTxtBox" Margin="3" VerticalAlignment="Center" KeyDown="mProductListNameTxtBox_KeyDown" TabIndex="99" />
                        <Button Name="mCreateProductListBtn" Grid.Column="1" Margin="3" VerticalAlignment="Bottom" Tapped="mAddProductListBtn_Tapped">Add</Button>
                    </Grid>
                </Grid>
                <Grid Name="mGridProductEntries" Grid.Row="2"  Visibility="{Binding ElementName=mListViewProductLists, Path=SelectedItem, Converter={StaticResource mCollapsedWhenNullConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" FontSize="37" HorizontalAlignment="Center">Products</TextBlock>
                    <ListView Name="mListViewProductEntries" Grid.Row="1" Grid.Column="0" Margin="3" SelectionMode="Single" CanDragItems="False" CanReorderItems="False"
                              IsDoubleTapEnabled="False"
                              IsHoldingEnabled="False" 
                              IsItemClickEnabled="False"
                              IsRightTapEnabled="False"
                              ItemsSource="{Binding ElementName=mListViewProductLists, Path=SelectedItem.ProductEntries}" 
                              ItemContainerStyle="{StaticResource ListViewItemStyle}"
                              >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border Background="#22FFFFFF" BorderThickness="0">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0" Orientation="Vertical" Margin="3" VerticalAlignment="Center">
                                            <TextBlock Margin="3" VerticalAlignment="Center" FontSize="25" Text="{Binding Path=ProductName}"/>
                                            <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="3">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Margin="3" Text="Amount"/>
                                                <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding Path=Amount}"/>
                                                <TextBlock Grid.Row="2" Grid.Column="0" Margin="3" Text="Comments"/>
                                                <TextBox Grid.Row="3" Margin="3" AcceptsReturn="True" Height="60" Text="{Binding Path=Comments}"/>
                                            </Grid>
                                        </StackPanel>
                                        <Canvas Name="CanvasDeleteEntry" Grid.Column="1" Background="Transparent" Margin="3,10,25,3" VerticalAlignment="Top" Width="25" Height="25"
                                                        Tapped="ProductEntryDelete_Tapped" PointerEntered="CanvasDeleteList_PointerEntered" PointerPressed="CanvasDelete_PointerPressed" PointerReleased="CanvasDelete_PointerReleased"
                                                PointerCaptureLost="CanvasDelete_PointerCaptureLost" PointerExited="CanvasDelete_PointerExited">

                                            <Line X1="0" Y1="0" X2="25" Y2="25" StrokeThickness="5" Stroke="Red"/>
                                            <Line X1="0" Y1="25" X2="25" Y2="0" StrokeThickness="5" Stroke="Red"/>
                                        </Canvas>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Line Grid.Row="2" Margin="3" X1="0" Y1="0" X2="{Binding ElementName=mGridProductEntries, Path=ActualWidth}" Y2="0" Stroke="White" StrokeThickness="1" />
                    <Grid  Grid.Row="3" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="mProductEntryNameTxtBox" Margin="3" VerticalAlignment="Center" KeyDown="mProductEntryNameTxtBox_KeyDown" TabIndex="99"/>
                        <Button Name="mCreateProductEntryBtn" Grid.Column="1" Margin="3" VerticalAlignment="Center" Tapped="mAddProductEntryBtn_Tapped">Add</Button>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>